class notification{constructor(){this.params=new URLSearchParams(window.location.search)}getFlag(){return this.params.get("flag")}checkFlagAndShowNotification(){var s=this.getFlag();1==s&&($.notify("You have registered successfully","success"),this.params.set("flag",0),history.replaceState(null,null,"?"+this.params.toString())),2==s&&($.notify("Logged-Out Successfully","success"),this.params.set("flag",0),history.replaceState(null,null,"?"+this.params.toString())),3==s&&($.notify("User already exist","info"),this.params.set("flag",0),history.replaceState(null,null,"?"+this.params.toString())),4==s&&($.notify("Password updated","success"),this.params.set("flag",0),history.replaceState(null,null,"?"+this.params.toString()))}}class login{constructor(){this.emailElement=$("input[name='email']"),this.passwordElement=$("input[name='password']"),this.submitElement=$("#Login"),this.email,this.password}signin(){(self=this).submitElement.click(async function(t){t.preventDefault();try{var s=self.updateData(),e=await self.saveIntoDB(s);$.cookie("token",e.data.data.access_token,{path:"/"}),$.cookie("ref_token",e.data.data.refresh_token,{path:"/"}),window.location.replace("/users/link?flag=1")}catch(s){if(s.response&&422===s.response.status)return t=s.response.data.message.split(" "),void $.notify(t[0]+" required","error");if(s.response&&401===s.response.status||400===s.response.status)return void $.notify(s.response.data.message,"error");if(s.response&&429===s.response.status)return void $.notify(s.response.data,"error");$.notify(s,"error")}})}updateData(){return this.email=this.emailElement.val(),this.password=this.passwordElement.val(),{email:this.email,password:this.password}}saveIntoDB(a){return new Promise((s,t)=>{var e=axios.post("/api/v1/users/login",a,{baseURL:"http://localhost:8000/"});s(e),t(e)})}}